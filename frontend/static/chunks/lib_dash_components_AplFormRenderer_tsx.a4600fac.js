"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkaxiom_local_dash"] = self["webpackChunkaxiom_local_dash"] || []).push([["lib_dash_components_AplFormRenderer_tsx"],{

/***/ 88215:
/*!*************************************************!*\
  !*** ./lib/dash/components/AplFormRenderer.tsx ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AplFormRenderer\": () => (/* binding */ AplFormRenderer)\n/* harmony export */ });\n/* harmony import */ var classy_forms__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! classy-forms */ 66318);\n/* harmony import */ var lodash_isEqual__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/isEqual */ 47184);\n/* harmony import */ var lodash_isEqual__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_isEqual__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var mobx_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! mobx-react */ 32390);\n/* harmony import */ var mobx_react__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! mobx-react */ 88464);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ 89526);\n/* harmony import */ var _stores_QueryRequestFormProps__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../stores/QueryRequestFormProps */ 26916);\n/* harmony import */ var _util_numbers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/numbers */ 64684);\n/* harmony import */ var _DynamicAplEditor__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./DynamicAplEditor */ 9640);\n/* harmony import */ var _QueryAlerts__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./QueryAlerts */ 19608);\n/* harmony import */ var _QueryResults__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./QueryResults */ 84238);\n/* harmony import */ var _QueryStatusBar__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./QueryStatusBar */ 35629);\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\n\n\n\n\n\n\n\nlet AplFormRenderer = class AplFormRenderer extends react__WEBPACK_IMPORTED_MODULE_2__.Component {\n    constructor(props) {\n        super(props);\n        this.aplEditor = null;\n        this.onSubmit = (event, formFields, reset, isDirty) => {\n            this.props.onSubmit(event, formFields, reset, isDirty);\n        };\n        this.onEditorContentChange = (editorContent) => {\n            var _a;\n            (_a = this.formFields) === null || _a === void 0 ? void 0 : _a.editorContent.onChangeValue(editorContent);\n        };\n        this.onAplChange = (apl) => {\n            var _a;\n            (_a = this.formFields) === null || _a === void 0 ? void 0 : _a.apl.onChangeValue(apl);\n            if (this.props.onAplChange) {\n                this.props.onAplChange(apl);\n            }\n        };\n        this.onQuickRangeChanged = (quickRange) => {\n            var _a;\n            (_a = this.formFields) === null || _a === void 0 ? void 0 : _a.quickRange.onChangeValue(quickRange);\n            if (quickRange && this.formFields) {\n                // Clear the start, end\n                const { startTime, endTime } = this.formFields;\n                startTime.onChangeValue('');\n                endTime.onChangeValue('');\n            }\n        };\n        this.onDateRangeChanged = (timestampStart, timestampEnd, refreshRate) => {\n            if (this.formFields) {\n                const { startTime, endTime } = this.formFields;\n                startTime.onChangeValue(timestampStart);\n                endTime.onChangeValue(timestampEnd);\n                if (timestampStart || timestampEnd) {\n                    // Clear the quick range\n                    this.formFields.quickRange.onChangeValue('');\n                }\n            }\n        };\n        this.onCompareAgainstChanged = (compareAgainst) => {\n            var _a, _b;\n            (_a = this.formFields) === null || _a === void 0 ? void 0 : _a.against.onChangeValue(compareAgainst);\n            if (compareAgainst) {\n                // Clear the against timestamp\n                (_b = this.formFields) === null || _b === void 0 ? void 0 : _b.againstTimestamp.onChangeValue('');\n            }\n        };\n        this.onCompareAgainstTimestampChanged = (timestamp) => {\n            var _a, _b;\n            (_a = this.formFields) === null || _a === void 0 ? void 0 : _a.againstTimestamp.onChangeValue(timestamp);\n            if (timestamp) {\n                // Clear the against\n                (_b = this.formFields) === null || _b === void 0 ? void 0 : _b.against.onChangeValue('');\n            }\n        };\n        this.onSelectionChanged = (selection) => {\n            var _a, _b, _c, _d;\n            (_a = this.formFields) === null || _a === void 0 ? void 0 : _a.startLineNumber.onChangeValue(selection.startLineNumber);\n            (_b = this.formFields) === null || _b === void 0 ? void 0 : _b.endLineNumber.onChangeValue(selection.endLineNumber);\n            (_c = this.formFields) === null || _c === void 0 ? void 0 : _c.startColumn.onChangeValue(selection.startColumn);\n            (_d = this.formFields) === null || _d === void 0 ? void 0 : _d.endColumn.onChangeValue(selection.endColumn);\n        };\n        this.onLineColAlertClick = (line, col) => {\n            var _a;\n            (_a = this.aplEditor) === null || _a === void 0 ? void 0 : _a.setPosition(line, col);\n        };\n        this.onContainsTimeFilterChange = (containsTimeFilter) => {\n            var _a, _b;\n            (_a = this.formFields) === null || _a === void 0 ? void 0 : _a.containsTimeFilter.onChangeValue(containsTimeFilter);\n            if (containsTimeFilter) {\n                // Remove against value since time range from where clause is unknown\n                (_b = this.formFields) === null || _b === void 0 ? void 0 : _b.against.onChangeValue(undefined);\n            }\n        };\n        this.onSelectedDatasetsChange = (datasets) => {\n            var _a, _b;\n            if (!lodash_isEqual__WEBPACK_IMPORTED_MODULE_1___default()((_a = this.formFields) === null || _a === void 0 ? void 0 : _a.datasets, datasets)) {\n                (_b = this.formFields) === null || _b === void 0 ? void 0 : _b.datasets.onChangeValue(datasets);\n                if (this.props.onSelectedDatasetsChange) {\n                    this.props.onSelectedDatasetsChange(datasets);\n                }\n            }\n        };\n        this.onClearClick = (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            this.reset();\n            this.props.datasetStore.cancelQuerying();\n            // change key to reinitialize editor\n            this.setState({ editorKey: this.state.editorKey + 1 });\n            if (this.props.onClearClick && this.formFields) {\n                this.props.onClearClick(this.formFields);\n            }\n        };\n        this.onCancelClick = (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            this.props.datasetStore.cancelQuerying();\n        };\n        this.insertText = (text) => {\n            if (this.aplEditor) {\n                this.aplEditor.insertText(text);\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/no-empty-function, no-empty-function\n        this.reset = () => { };\n        this.state = {\n            editorKey: 0,\n        };\n    }\n    render() {\n        var _a;\n        const { render, defaultQuery, prohibitTimeFilter } = this.props;\n        const formFieldConfigs = [\n            {\n                name: 'editorContent',\n            },\n            {\n                name: 'apl',\n            },\n            {\n                name: 'quickRange',\n                initValue: '30m',\n            },\n            {\n                name: 'startTime',\n            },\n            {\n                name: 'endTime',\n            },\n            {\n                name: 'against',\n            },\n            {\n                name: 'againstTimestamp',\n            },\n            {\n                name: 'aggChartOpts',\n            },\n            {\n                // Preserved for backwards compatibility.\n                name: 'displayNull',\n            },\n            {\n                name: 'containsTimeFilter',\n                isFalse: prohibitTimeFilter ? true : undefined,\n                helperText: prohibitTimeFilter ? 'Time filter is not allowed in query' : undefined,\n                initValue: false,\n            },\n            {\n                name: 'datasets',\n                initValue: [],\n            },\n            // Selection options\n            {\n                name: 'startLineNumber',\n            },\n            {\n                name: 'endLineNumber',\n            },\n            {\n                name: 'startColumn',\n            },\n            {\n                name: 'endColumn',\n            },\n        ];\n        (0,_stores_QueryRequestFormProps__WEBPACK_IMPORTED_MODULE_3__.initFormFieldConfigsFromApl)(formFieldConfigs, defaultQuery);\n        const defaultValue = (_a = formFieldConfigs.find((field) => field.name === 'editorContent')) === null || _a === void 0 ? void 0 : _a.initValue;\n        const selectionConfig = formFieldConfigs.reduce((accum, field) => {\n            const { name } = field;\n            if (name === 'startLineNumber' || name === 'endLineNumber' || name === 'startColumn' || name === 'endColumn') {\n                accum[name] = field.initValue;\n            }\n            return accum;\n        }, {});\n        let selection;\n        if ((0,_util_numbers__WEBPACK_IMPORTED_MODULE_4__.isNumeric)(selectionConfig.startLineNumber) &&\n            (0,_util_numbers__WEBPACK_IMPORTED_MODULE_4__.isNumeric)(selectionConfig.endLineNumber) &&\n            (0,_util_numbers__WEBPACK_IMPORTED_MODULE_4__.isNumeric)(selectionConfig.startColumn) &&\n            (0,_util_numbers__WEBPACK_IMPORTED_MODULE_4__.isNumeric)(selectionConfig.endColumn)) {\n            selection = {\n                startLineNumber: selectionConfig.startLineNumber,\n                startColumn: selectionConfig.startColumn,\n                endLineNumber: selectionConfig.endLineNumber,\n                endColumn: selectionConfig.endColumn,\n            };\n        }\n        return render({\n            renderForm: (context) => {\n                return (react__WEBPACK_IMPORTED_MODULE_2__.createElement(mobx_react__WEBPACK_IMPORTED_MODULE_5__.Observer, null, () => {\n                    const { hideDateRange, hideAgainst, renderRunButton, renderDefaultResultsContent, onRunClick, className, renderResults, onExpandTimeRange, onDropdownVisibleChange, onAggChartOptsChange, disabled, renderResultAlerts, loadingDefaultValue, hideClear, } = this.props;\n                    const { isQueryRunning, lastFormValues } = this.props.datasetStore;\n                    const { formFields, isDirty, reset } = context;\n                    // store these as members so bound functions don't need to be created which triggers re-renders\n                    this.formFields = formFields;\n                    this.reset = reset;\n                    let dirty = isDirty();\n                    // Expects lastQueryFormValues to be set onSubmit and use those to check if the form is dirty\n                    // otherwise, use isDirty\n                    if (lastFormValues) {\n                        const currValues = (0,classy_forms__WEBPACK_IMPORTED_MODULE_0__.formFieldsToObject)(formFields);\n                        dirty = !lodash_isEqual__WEBPACK_IMPORTED_MODULE_1___default()(currValues, lastFormValues);\n                    }\n                    const validationErrors = [];\n                    Object.keys(formFields).forEach((key) => {\n                        const field = formFields[key];\n                        if (field.hasError && field.helperText) {\n                            validationErrors.push(field.helperText);\n                        }\n                    });\n                    const isCancelable = isQueryRunning;\n                    return (react__WEBPACK_IMPORTED_MODULE_2__.createElement(\"div\", { className: className },\n                        react__WEBPACK_IMPORTED_MODULE_2__.createElement(_DynamicAplEditor__WEBPACK_IMPORTED_MODULE_6__.DynamicAplEditor, { key: this.state.editorKey, isDirty: dirty, disabled: disabled, hideDateRange: hideDateRange, hideAgainst: hideAgainst, aplEditorRef: (ref) => {\n                                this.aplEditor = ref;\n                            }, defaultValue: defaultValue, onEditorContentChange: this.onEditorContentChange, onAplChange: this.onAplChange, onRunClick: onRunClick, renderRunButton: renderRunButton, quickRange: formFields.quickRange.value, startTime: formFields.startTime.value, endTime: formFields.endTime.value, against: formFields.against.value, againstTimestamp: formFields.againstTimestamp.value, onQuickRangeChanged: this.onQuickRangeChanged, onDateRangeChanged: this.onDateRangeChanged, onCompareAgainstChanged: this.onCompareAgainstChanged, onCompareAgainstTimestampChanged: this.onCompareAgainstTimestampChanged, disableAgainst: !formFields.apl.value.match(/summarize/gi) || formFields.containsTimeFilter.value, onSelectionChange: this.onSelectionChanged, selection: selection, containsTimeFilter: formFields.containsTimeFilter.value, onContainsTimeFilterChange: this.onContainsTimeFilterChange, onSelectedDatasetsChange: this.onSelectedDatasetsChange, loadingDefaultValue: loadingDefaultValue, onClearClick: isCancelable ? this.onCancelClick : this.onClearClick, clearBtnText: isCancelable ? 'Cancel' : undefined, hideClear: hideClear }),\n                        react__WEBPACK_IMPORTED_MODULE_2__.createElement(_QueryStatusBar__WEBPACK_IMPORTED_MODULE_7__.QueryStatusBar, { onAggChartOptsChange: onAggChartOptsChange, onDropdownVisibleChange: onDropdownVisibleChange }),\n                        react__WEBPACK_IMPORTED_MODULE_2__.createElement(_QueryAlerts__WEBPACK_IMPORTED_MODULE_8__.QueryAlerts, { className: \"m4\" }),\n                        renderResults ? (renderResults({\n                            context: context,\n                            queryResultsProps: {\n                                onLineColAlertClick: this.onLineColAlertClick.bind(this),\n                                otherError: (validationErrors === null || validationErrors === void 0 ? void 0 : validationErrors.length) ? validationErrors[0] : undefined,\n                            },\n                        })) : (react__WEBPACK_IMPORTED_MODULE_2__.createElement(_QueryResults__WEBPACK_IMPORTED_MODULE_9__.QueryResults\n                        // Settings are global\n                        , { \n                            // Settings are global\n                            settingsKey: \"*\", showAllColumns: true, renderDefaultContent: renderDefaultResultsContent, onExpandTimeRange: formFields.containsTimeFilter.value ? undefined : onExpandTimeRange, hideRaw: true, renderOtherAlerts: renderResultAlerts ? renderResultAlerts : undefined, onLineColAlertClick: this.onLineColAlertClick, otherError: (validationErrors === null || validationErrors === void 0 ? void 0 : validationErrors.length) ? validationErrors[0] : undefined }))));\n                }));\n            },\n            formFieldConfigs: formFieldConfigs,\n            onSubmit: this.onSubmit,\n        });\n    }\n};\nAplFormRenderer = __decorate([\n    (0,mobx_react__WEBPACK_IMPORTED_MODULE_10__.inject)('datasetStore'),\n    mobx_react__WEBPACK_IMPORTED_MODULE_10__.observer\n], AplFormRenderer);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///88215\n");

/***/ })

}]);